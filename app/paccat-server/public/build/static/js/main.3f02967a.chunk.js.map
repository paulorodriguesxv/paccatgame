{"version":3,"sources":["store/ducks/lottery.js","store/ducks/index.js","store/index.js","services/backend.js","blockchain/auth/index.js","components/Ticket/index.js","assets/images/00-ticket-template.svg","assets/images/06-ticket-template.svg","assets/images/07-08-ticket-template.svg","assets/images/09-10-ticket-template.svg","assets/images/11-12-ticket-template.svg","assets/images/13-ticket-template.svg","assets/images/14-ticket-template.svg","assets/images/15-ticket-template.svg","components/TicketCard/index.js","assets/images/pigblack.svg","components/LotteryBoard/bullet.js","components/LotteryBoard/index.js","components/LotteryPay/status.js","components/LotteryPay/index.js","components/PlayersBoard/index.js","components/PlayGame/index.js","components/Rules/index.js","routes/SignRoutes.js","components/LoadingForm/index.js","components/Welcome/index.js","routes/OtherRoutes.js","routes/index.js","App.js","index.js"],"names":["createActions","getSelectedNumbers","toggleNumber","clearSelectedNumbers","setLoading","setPaying","Types","Creators","generateNumbers","size","Array","keys","map","item","id","selected","INITIAL_STATE","Immutable","loading","payingMessage","boardNumbers","state","filter","number","createReducer","GET_SELECTED_NUMBERS","TOGGLE_NUMBER","action","numbersSelected","length","newState","CLEAR_SELECTED_NUMBERS","SET_LOADING","merge","SET_PAYING","message","combineReducers","lottery","store","createStore","rootReducer","getNFTImageURI","tokenURI","a","axios","get","res","status","Error","data","metadata","image","AuthContext","React","createContext","AuthProvider","children","useState","isAuthenticated","setIsAuthenticated","account","setAccount","balance","setBalance","myPlayers","setMyPlayers","token","setToken","loadWeb3","window","ethereum","web3","Web3","enable","currentProvider","alert","geMyPlayersFromBlockchain","methods","balanceOf","call","blockchainPlayers","i","tokenOfOwnerByIndex","push","imagePlayers","Promise","all","uri","imageURI","then","loadBlockchainData","eth","getAccounts","accounts","net","getId","networkId","networkData","PacCat","networks","abi","address","utils","getBalance","fromWei","_token","Contract","GetLuck","selectedNumbers","amount","events","numbers","onRegistered","onError","onReceipt","onConfirmation","getLuck","send","from","value","toWei","toString","on","hash","console","log","receipt","confirmationNumber","err","Provider","isLoged","Login","useAuth","useContext","ticket","props","title","description","Card","style","width","height","Img","variant","src","Body","className","Title","Text","TicketCard","playerNumbers","calculatePlayerCost","numbersQty","playersData","digits","cost","Player00","Player06","Player0708","Player0910","Player1112","Player13","Player14","Player15","player","players","getPlayer","Ticket","renderPlayerCard","LotteryBullet","onClick","href","LotteryBoard","handleToggle","StatusForm","show","Modal","onHide","dialogClassName","Header","closeButton","display","justifyContent","alignItems","visible","type","color","TwitterShareButton","url","TwitterIcon","round","LotteryPay","setSelectedNumbers","useEffect","calculatePlayer","marginTop","toFixed","PlayersBoard","Carousel","controls","indicators","key","Item","interval","connect","dispatch","bindActionCreators","LotteryActions","handleOnRegistered","handleReceipt","handleConfirmation","handleError","handlePay","eventHandlers","Container","fluid","Row","PigBlack","alt","padding","fontFamily","substring","Col","textTransform","textAlign","lg","md","to","Rules","SignRoutes","path","component","PlayGame","LoadingForm","OtherRoutes","Welcome","Routes","App","loadingForm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3f02967a.chunk.js","sourcesContent":["import { createActions, createReducer } from \"reduxsauce\";\r\nimport Immutable from \"seamless-immutable\";\r\n\r\n/**\r\n * Action types & creators\r\n */\r\nexport const { Types, Creators } = createActions({    \r\n    getSelectedNumbers: [],\r\n    toggleNumber: [\"number\"],\r\n    clearSelectedNumbers: [],\r\n    setLoading: [\"loading\"],\r\n    setPaying: [\"message\"]\r\n});\r\n\r\nconst generateNumbers = (size) => {\r\n    return [...Array(size).keys()].map(item => ({id: item+1, selected: false}))\r\n}\r\n\r\nconst INITIAL_STATE = Immutable({\r\n    loading: false,\r\n    payingMessage: \"\",\r\n    boardNumbers: generateNumbers(60),\r\n})\r\n\r\n\r\nconst getSelectedNumbers = (state = INITIAL_STATE, action)  => {\r\n    return state.boardNumbers.filter(number => number.selected)\r\n}\r\n\r\nconst toggleNumber = (state = INITIAL_STATE, action)  => {\r\n\r\n    const numbersSelected = getSelectedNumbers(state, action);\r\n    if ((numbersSelected.length === 15) && (!action.number.selected)) {\r\n        return state\r\n    }\r\n\r\n    let newState = state.boardNumbers.map(\r\n        item => {\r\n            if (item.id !== action.number.id) return {...item}\r\n\r\n            return { ...item, selected: !item.selected }    \r\n        }   \r\n    )\r\n\r\n    return {...state, boardNumbers: newState}\r\n}\r\n\r\nconst clearSelectedNumbers = (state = INITIAL_STATE, action)  => \r\n    Immutable({...state, boardNumbers: generateNumbers(60)})    \r\n\r\nconst setLoading = (state = INITIAL_STATE, action)  => \r\n    state.merge({...state, loading: action.loading})\r\n\r\nconst setPaying = (state = INITIAL_STATE, action)  => {\r\n\r\n    return {...state, payingMessage: action.message}\r\n}\r\n    \r\n\r\nexport const LotteryTypes = Types;\r\n\r\nexport default createReducer(INITIAL_STATE, {\r\n    [Types.GET_SELECTED_NUMBERS]: getSelectedNumbers,\r\n    [Types.TOGGLE_NUMBER]: toggleNumber,\r\n    [Types.CLEAR_SELECTED_NUMBERS]: clearSelectedNumbers,\r\n    [Types.SET_LOADING]: setLoading,\r\n    [Types.SET_PAYING]: setPaying\r\n});","import { combineReducers } from \"redux\";\r\n\r\nimport lottery from \"./lottery\";\r\n\r\nexport default combineReducers({\r\n    lottery\r\n});\r\n","import { createStore } from \"redux\";\r\n\r\nimport rootReducer from \"./ducks\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;\r\n","import axios from \"axios\";\r\n\r\n/*\r\nconst getNFTImage = async(imageURI) => {\r\n    const res = await axios(imageURI);\r\n\r\n    if (res.status !== 200){\r\n        throw new Error('It was not possible to request NFT Image')\r\n    }   \r\n    \r\n    return res.data\r\n}\r\n*/\r\n\r\nexport const getNFTImageURI = async (tokenURI) =>  {\r\n\r\n    const res = await axios.get(tokenURI);\r\n\r\n    if (res.status !== 200){\r\n        throw new Error('It was not possible to request NFT metada')\r\n    }\r\n\r\n    const metadata = await res.data\r\n\r\n    return metadata.image\r\n}","import React from 'react'\r\nimport { useState, useContext } from 'react'\r\nimport Web3 from 'web3'\r\nimport PacCat from \"../../contracts/PacCat.json\"\r\nimport { getNFTImageURI } from \"../../services/backend\"\r\n\r\n// this is the equivalent to the createStore method of Redux\r\n// https://redux.js.org/api/createstore\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport default AuthContext;\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false)\r\n    const [account, setAccount] = useState()\r\n    const [balance, setBalance]  = useState(0)\r\n    const [myPlayers, setMyPlayers] = useState([])\r\n\r\n    const [token, setToken] = useState();\r\n\r\n    const loadWeb3 = async () => {\r\n\r\n        try{\r\n            if (window.ethereum) {\r\n                window.web3 = new Web3(window.ethereum)\r\n                await window.ethereum.enable()\r\n                return true;\r\n            } else if (window.web3) {\r\n                window.web3 = new Web3(window.web3.currentProvider)\r\n                return true\r\n            } else {\r\n                window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n                return false\r\n            }\r\n        } catch (err) {\r\n            window.alert('Error on login into your Wallet', err);\r\n            return false\r\n        }\r\n    }\r\n\r\n    const geMyPlayersFromBlockchain = async (token, account) =>{\r\n\r\n        let balanceOf = await token.methods.balanceOf(account).call()\r\n\r\n        const blockchainPlayers = []\r\n        for (let i = 0; i < balanceOf; i++) {\r\n            const id = await token.methods.tokenOfOwnerByIndex(account, i).call()\r\n            const tokenURI = await token.methods.tokenURI(id).call()\r\n\r\n            blockchainPlayers.push(tokenURI)\r\n        }\r\n\r\n        const imagePlayers = []\r\n         Promise.all(blockchainPlayers.map(async(uri) => {\r\n            const imageURI = await getNFTImageURI(uri)\r\n            \r\n            imagePlayers.push(imageURI)\r\n            })\r\n        ).then(() => {\r\n            setMyPlayers(imagePlayers)})        \r\n    }\r\n\r\n    const loadBlockchainData = async () => {\r\n        const web3 = window.web3\r\n        const accounts = await web3.eth.getAccounts()\r\n\r\n        setAccount(accounts[0]);                \r\n\r\n        // Load smart contract\r\n        const networkId = await web3.eth.net.getId()\r\n        const networkData = PacCat.networks[networkId]\r\n       \r\n        if(networkData) {\r\n            const abi = PacCat.abi\r\n            const address = networkData.address\r\n\r\n            const balance = web3.utils.fromWei(await web3.eth.getBalance(address), 'ether')\r\n            const _token = new web3.eth.Contract(abi, address)           \r\n\r\n            setToken(_token)\r\n            setBalance(balance)\r\n        \r\n            await geMyPlayersFromBlockchain(_token, accounts[0]);\r\n\r\n        } else {\r\n          alert('Smart contract not deployed to detected network.')\r\n        }\r\n        \r\n      }  \r\n\r\n    async function Login() {\r\n        if (await loadWeb3()){\r\n            await loadBlockchainData();\r\n            setIsAuthenticated(true);\r\n        }\r\n    }\r\n\r\n    const GetLuck = async (selectedNumbers, amount, events) => {\r\n        const web3 = window.web3\r\n        const numbers = selectedNumbers.map(number => number.id)\r\n\r\n        const { onRegistered, onError , onReceipt, onConfirmation } = events\r\n        \r\n        /*\r\n        token.methods.getLuck(account, numbers)\r\n        .estimateGas(\r\n            {\r\n                from: account,\r\n                value: web3.utils.toWei( amount.toString(), \"ether\") \r\n            }, function(x, gasAmount) {\r\n                console.log(gasAmount)\r\n            }\r\n        )\r\n        \r\n        */\r\n        token.methods.getLuck(account, numbers)\r\n            .send({from: account, value: web3.utils.toWei( amount.toString(), \"ether\")} )\r\n            .on('transactionHash', async (hash) => {            \r\n                console.log(\"Your NFT's was registered\")\r\n                await onRegistered(hash)\r\n            })\r\n            .on('receipt', async (receipt) => {\r\n                \r\n                console.log(\"Your NFT's was minted successfully\")\r\n\r\n                await onReceipt(receipt)\r\n                await geMyPlayersFromBlockchain(token, account)\r\n            })\r\n            .on('confirmation', async (confirmationNumber, receipt) => {                \r\n                console.log(\"Confirmation trigged\");\r\n\r\n                await onConfirmation(confirmationNumber, receipt)\r\n                await geMyPlayersFromBlockchain(token, account)                            \r\n            })\r\n            .on('error', async (err) => {\r\n                onError(err.message)\r\n            })       \r\n            \r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                isLoged: isAuthenticated,\r\n                account,\r\n                balance,\r\n                myPlayers,\r\n                geMyPlayersFromBlockchain,\r\n                Login,\r\n                GetLuck\r\n            }}\r\n        >\r\n        {children}\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n\r\nexport function useAuth() {\r\n    const context = useContext(AuthContext);\r\n  \r\n    return context;\r\n  }","import React from 'react';\r\nimport { Card } from 'react-bootstrap'\r\n\r\nconst ticket = (props) => {\r\n\r\n    const { image, title, description }  = props;\r\n\r\n    return (\r\n        <Card style={{ width: '18rem', height: \"16em\"}}>\r\n        <Card.Img variant=\"top\" src={image} />\r\n        <Card.Body className=\"normal-text\">\r\n            <Card.Title>{title}</Card.Title>\r\n            <Card.Text>\r\n                <span>{description}</span>\r\n            </Card.Text>\r\n        </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\n\r\nexport default ticket","export default __webpack_public_path__ + \"static/media/00-ticket-template.2d84cc24.svg\";","export default __webpack_public_path__ + \"static/media/06-ticket-template.8a9acd5a.svg\";","export default __webpack_public_path__ + \"static/media/07-08-ticket-template.822aa37f.svg\";","export default __webpack_public_path__ + \"static/media/09-10-ticket-template.a65d141c.svg\";","export default __webpack_public_path__ + \"static/media/11-12-ticket-template.0a321072.svg\";","export default __webpack_public_path__ + \"static/media/13-ticket-template.0ff23e44.svg\";","export default __webpack_public_path__ + \"static/media/14-ticket-template.8dc8e5ac.svg\";","export default __webpack_public_path__ + \"static/media/15-ticket-template.f1584e48.svg\";","import React from 'react'\r\nimport Ticket from \"../Ticket\"\r\nimport Player00 from \"../../assets/images/00-ticket-template.svg\"\r\nimport Player06 from \"../../assets/images/06-ticket-template.svg\"\r\nimport Player0708 from \"../../assets/images/07-08-ticket-template.svg\"\r\nimport Player0910 from \"../../assets/images/09-10-ticket-template.svg\"\r\nimport Player1112 from \"../../assets/images/11-12-ticket-template.svg\"\r\nimport Player13 from \"../../assets/images/13-ticket-template.svg\"\r\nimport Player14 from \"../../assets/images/14-ticket-template.svg\"\r\nimport Player15 from \"../../assets/images/15-ticket-template.svg\"\r\n\r\nimport './style.css';\r\n\r\nconst TicketCard = (props) => {\r\n\r\n    const {playerNumbers} = props\r\n\r\n    const calculatePlayer = (numbers) => {\r\n        const _betCost = 0.05\r\n        const factor = numbers.length**9 / 10000000;\r\n    \r\n        return factor * _betCost;    \r\n    }\r\n\r\n    const calculatePlayerCost = (numbersQty) => {\r\n        return calculatePlayer([...Array(numbersQty)])\r\n    }    \r\n    \r\n    const playersData = [\r\n        { digits: 0, title: \"Choose at least six numbers\", description: \"Choose from 6 to 15 numbers\", cost: 0, image: Player00},\r\n        { digits: 6, title: \"The Ordinary One\", description: \"For those who selected only 6 numbers\", cost: calculatePlayerCost(6), image: Player06},\r\n        { digits: 7, title: \"The Phanton in Red C \", description: \"For those who selected 7 or 8 numbers\", cost: calculatePlayerCost(7), image: Player0708 },\r\n        { digits: 8, title: \"The Phanton in Red C \", description: \"For those who selected 7 or 8 numbers\", cost: calculatePlayerCost(8), image: Player0708 },\r\n        { digits: 9, title: \"The Phanton in Red T\", description: \"For those who selected 9 or 10 numbers\",  cost: calculatePlayerCost(9), image: Player0910},           \r\n        { digits: 10, title: \"The Phanton in Red T\", description: \"For those who selected 9 or 10 numbers\",  cost: calculatePlayerCost(10), image: Player0910},\r\n        { digits: 11, title: \"The Phanton in Red Master \", description: \"For those who selected 11 or 12 numbers\",  cost: calculatePlayerCost(11), image: Player1112},\r\n        { digits: 12, title: \"The Phanton in Red Master \", description: \"For those who selected 11 or 12 numbers\",  cost: calculatePlayerCost(12), image: Player1112 },\r\n        { digits: 13, title: \"The one who knows VIP\", description: \"For those who selected 13 numbers\", cost: calculatePlayerCost(13), image: Player13},\r\n        { digits: 14, title: \"The Game Master\", description: \"For those who selected 14 numbers\", cost: calculatePlayerCost(14), image: Player14},\r\n        { digits: 15, title: \"The Patreon\", description: \"For those who selected 15 numbers\", cost: calculatePlayerCost(15), image: Player15 },\r\n    ]\r\n\r\n    const getPlayer = (players, selectedNumbers) => {\r\n        const player = players.filter(player => player.digits === selectedNumbers)\r\n\r\n        \r\n        if (player.length === 1){            \r\n            return (\r\n               player[0]\r\n            )\r\n        }\r\n    }\r\n\r\n    const renderPlayerCard = () => {\r\n        const player = getPlayer(playersData, playerNumbers.length)\r\n\r\n        if (player){\r\n            return (\r\n                <div className=\"m-2\"><Ticket image={player.image} title={player.title} description={player.description} cost={player.cost}></Ticket></div>            \r\n            )    \r\n        } else {\r\n            return (<div></div>)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"m-2\"> \r\n              {renderPlayerCard(playerNumbers)}\r\n        </div>       \r\n    )\r\n}\r\n\r\nexport default TicketCard\r\n","export default __webpack_public_path__ + \"static/media/pigblack.cf3d650c.svg\";","import React from 'react'\r\n\r\nconst LotteryBullet = (props) => {\r\n\r\n    const { number, onClick } = props\r\n\r\n    return (\r\n        <li><a className={number.selected ? \" selected\" : \"\"} href=\"#;\" onClick={() => onClick(number)}>{number.id}</a></li>\r\n    )\r\n}\r\n\r\nexport default LotteryBullet","import React from 'react'\r\n\r\nimport LotteryBullet from './bullet';\r\nimport './style.css';\r\n\r\n\r\nconst LotteryBoard = (props) => {\r\n\r\n    const {onClick, boardNumbers} = props;\r\n\r\n\r\n    const handleToggle = (number) => {\r\n        onClick(number)\r\n    }\r\n       \r\n    return (\r\n        <div className=\"coluna-aposte m-5\">\r\n            <ul className=\"escolhe-numero\">\r\n                {boardNumbers.map((item) => <LotteryBullet key={item.id} number={item} onClick={handleToggle}/>)}\r\n            </ul>           \r\n            <div className=\"container-numeros-selecionados\">\r\n                <ul className=\"numeros-selecionados\">\r\n                    {  boardNumbers.filter(number => number.selected).map(number => <li key={number.id}>{number.id}</li>)    }     \r\n                </ul>                \r\n            </div>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LotteryBoard","import React from 'react'\r\nimport { Modal } from 'react-bootstrap'\r\nimport Loader from 'react-loader-spinner';\r\nimport { TwitterShareButton, TwitterIcon } from \"react-share\";\r\n\r\nconst StatusForm = (props) => {\r\n    const  { show, setPaying, message } = props\r\n  \r\n    return (\r\n      <>\r\n        <Modal\r\n          show={show}\r\n          onHide={() => setPaying(\"\")}\r\n          dialogClassName=\"modal-90w\"\r\n          aria-labelledby=\"example-custom-modal-styling-title\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-custom-modal-styling-title\">\r\n              Player subscription\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <p>\r\n             {message}\r\n            </p>\r\n            <div className=\"container\" style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\r\n                <Loader visible={props.loading} type=\"Grid\" color=\"#00004d\" height={40} width={40}/>\r\n            </div>\r\n            <div className=\"text-center pt-5\">\r\n              <TwitterShareButton\r\n                        title=\"Hi! I just enrolled to play at PacCat Game #paccatgame\"\r\n                      url=\"https://paccatgame.com/\"\r\n                      >\r\n                        <TwitterIcon size={32} round />\r\n                      </TwitterShareButton>    \r\n            </div>            \r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n\r\nexport default StatusForm","import React, {useEffect, useState} from 'react'\r\nimport TicketCard from \"../TicketCard\"\r\nimport StatusForm from \"./status\"\r\n\r\n\r\nimport './style.css';\r\n\r\n\r\nconst LotteryPay = (props) => {\r\n    \r\n    const {numbers, action} = props\r\n\r\n    const [selectedNumbers, setSelectedNumbers] = useState([])\r\n\r\n    useEffect(\r\n        () => setSelectedNumbers(numbers.filter(number => number.selected === true)), [numbers])\r\n\r\n    const calculatePlayer = (numbers) => {\r\n        //const _betCost = 0.005 // eth net\r\n        const _betCost = 0.05 // bsc net\r\n        const factor = numbers.length**9 / 10000000;\r\n    \r\n        const total = factor * _betCost;    \r\n\r\n        return total\r\n    }\r\n    \r\n    \r\n    return (\r\n        <div style={{marginTop: \"10%\"}}>\r\n            {selectedNumbers.length > 5 ? <TicketCard playerNumbers={selectedNumbers}></TicketCard> : <></>}\r\n            <div>\r\n                {selectedNumbers.length > 5 ? \r\n                    <div>\r\n                        <p>Estimated cost: {calculatePlayer(selectedNumbers).toFixed(5)} </p>\r\n                        <button type=\"button\" id=\"playthegame\" className=\"btn btn-primary data-completar-jogo-mega-sena\" onClick={async() => await action(selectedNumbers, calculatePlayer(selectedNumbers))}>I want to Play the game</button>\r\n                    </div> : <div><TicketCard playerNumbers={[]}></TicketCard></div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LotteryPay\r\n","import React from 'react'\r\nimport Carousel from 'react-bootstrap/Carousel'\r\nimport './style.css';\r\n\r\nconst PlayersBoard = (props) => {\r\n\r\n    const { players } = props\r\n\r\n    return (\r\n        <>\r\n        { players.length > 0 ?\r\n        <div className=\"players d-flex W-100 text-center\">\r\n            <Carousel controls={true} indicators={true}>\r\n            { players.map((item, key) => \r\n                  <Carousel.Item interval={2500} key={key}>\r\n                      <img  className=\"d-block w-100\" src={item}></img>\r\n                   </Carousel.Item>\r\n                ) }\r\n            </Carousel>\r\n        </div> :\r\n        <h4>No players recorded yet</h4>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlayersBoard","import { Container, Row, Col } from 'react-bootstrap'\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Link } from \"react-router-dom\"\r\nimport { Creators as LotteryActions } from \"../../store/ducks/lottery\";\r\n\r\nimport { useAuth } from '../../blockchain/auth'\r\nimport TicketCard from \"../TicketCard\"\r\nimport PigBlack from \"../../assets/images/pigblack.svg\"\r\nimport LotteryBoard from \"../LotteryBoard\"\r\nimport LotteryPay from \"../LotteryPay\"\r\nimport PlayersBoard from \"../PlayersBoard\"\r\nimport StatusForm from \"../LotteryPay/status\"\r\n\r\nconst PlayGame = (props) => {\r\n  const { \r\n      account,\r\n      balance,\r\n      myPlayers,\r\n      GetLuck,\r\n       } = useAuth();\r\n\r\n\r\n  const { boardNumbers, payingMessage } = props.lottery\r\n  const { toggleNumber, clearSelectedNumbers, setPaying } = props\r\n\r\n  const handleLotteryNumberClick = (number) => {\r\n    toggleNumber(number);\r\n  }\r\n\r\n  const handleOnRegistered = async () => {\r\n    setPaying(\"Game registered successfully. Your transaction is pending on blockchain. Please wait a while\")               \r\n    clearSelectedNumbers();\r\n  }\r\n\r\n  const handleReceipt = async () => {   \r\n    setPaying(\"Your NFT's was minted successfully. Waiting for confirmation.\")\r\n  }\r\n\r\n  const handleConfirmation = async () => {   \r\n    setPaying('')\r\n  }\r\n\r\n  const handleError = async (message) => {\r\n      alert(message)\r\n      setPaying(\"\")\r\n      clearSelectedNumbers();\r\n  }\r\n  const handlePay = async (selectedNumbers, amount) => {\r\n    \r\n    const eventHandlers = {\r\n      onRegistered: handleOnRegistered,\r\n      onReceipt: handleReceipt,\r\n      onConfirmation: handleConfirmation,\r\n      onError: handleError\r\n    }\r\n\r\n    setPaying(\"Minting your NFT!\")\r\n    try{\r\n      await GetLuck(selectedNumbers, amount, eventHandlers)  \r\n    } catch (err){\r\n      setPaying(\"\")\r\n    }\r\n    \r\n  }\r\n\r\n  return (\r\n      <Container fluid>\r\n        <StatusForm show={payingMessage !== \"\"} setPaying={setPaying} message={payingMessage}></StatusForm>\r\n        <Row  className='mt-3'>\r\n          <img src={PigBlack} width=\"400\" height=\"200\" className=\"d-inline-block align-top\" alt=\"\" />\r\n          <h2 className=\"text-center\" style={{padding:\"20px\", fontFamily: \"ThemeFont\"}}>$ {balance.substring(0, 7)} BNB collected until now.</h2>\r\n          <p className=\"text-center\">This value will be distribuited to the winner at the end of the game</p>\r\n        </Row>\r\n\r\n\r\n        <Row >\r\n          <Col className=\"mt-3 rarity d-flex align-items-center justify-content-center\" style={{textTransform: \"uppercase\", padding:\"50px\"}}>\r\n            <div className=\"text-center\">\r\n              <h2>My Players</h2>\r\n              <PlayersBoard players={myPlayers} />\r\n            </div>            \r\n          </Col>\r\n        </Row>        \r\n\r\n        <Row className='mt-3'>\r\n          <Col className=\"rarity\" style={{textTransform: \"uppercase\"}}> \r\n            <div className=\"text-center col-lg-12 col-md-8 col-sm-12\">\r\n              <h2>Rarity</h2>\r\n              <p className=\"normal-text\">Each PacCat is unique and more numbers you choose, the rarer your avatar will be.</p>              \r\n              <p className=\"normal-text\">Once PacCat has been minted, it'll possible to see it on OpenSea as well.</p>              \r\n            </div>\r\n          </Col>\r\n        </Row>  \r\n\r\n        <Row className='mt-3'> \r\n          <Col className=\"d-flex align-items-center justify-content-center\" style={{textAlign: \"center\"}} >\r\n            <div className=\"m-2\"><TicketCard playerNumbers={[...Array(6)]}></TicketCard></div>\r\n            <div className=\"m-2\"><TicketCard playerNumbers={[...Array(7)]}></TicketCard></div>\r\n            <div className=\"m-2\"><TicketCard playerNumbers={[...Array(9)]}></TicketCard></div>\r\n            <div className=\"m-2\"><TicketCard playerNumbers={[...Array(11)]}></TicketCard></div>\r\n          </Col>\r\n        </Row>          \r\n\r\n        <Row className='mt-3'> \r\n          <Col className=\"d-flex align-items-center justify-content-center\" style={{textAlign: \"center\"}} >\r\n            <div className=\"m-2\"><TicketCard playerNumbers={[...Array(13)]}></TicketCard></div>\r\n            <div className=\"m-2\"><TicketCard playerNumbers={[...Array(14)]}></TicketCard></div>\r\n            <div className=\"m-2\"><TicketCard playerNumbers={[...Array(15)]}></TicketCard></div>\r\n            </Col>\r\n        </Row>         \r\n\r\n        <Row>          \r\n          <h2 className=\"text-center\" style={{padding:\"40px\", fontFamily: \"ThemeFont\"}}>Start playing</h2>\r\n        </Row>\r\n        <Row>\r\n          <Col lg=\"9\"> \r\n            <LotteryBoard onClick={handleLotteryNumberClick} boardNumbers={boardNumbers}></LotteryBoard>    \r\n          </Col>\r\n          <Col lg=\"3\">\r\n            <LotteryPay numbers={boardNumbers} action={handlePay}></LotteryPay>    \r\n          </Col>          \r\n        </Row>\r\n\r\n\r\n\r\n        <Row  className='mt-3'>\r\n          <Col md=\"6\">\r\n            <div className=\"normal-text\">\r\n              <h2  className=\"text-center\" style={{fontFamily: \"ThemeFont\"}}>General Rules:</h2>\r\n              <br/>\r\n              \r\n                <p>1 - At the end of the game, 90% of the amount collected on the PACCAT contract will be distributed to the winner. So, the more player, the bigger the prize </p>\r\n                <p>2 - In case two o more person win the game, the amount collected will be distributed equally among the winners</p>\r\n                <p>3 - The game finishes on 2022/May/31</p>\r\n                <p>4 - The winner will be the one who owned at least six numbers announced at the end of the game</p>\r\n                <p><Link to=\"/rules\"> Click here to see all Rules</Link></p>                \r\n              </div>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <div className=\"card-back\">\r\n              <p className=\"card-back-text\">{account}</p>\r\n            </div>          \r\n          </Col>             \r\n        </Row>      \r\n      </Container>          \r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  lottery: state.lottery,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators(LotteryActions, dispatch);\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PlayGame);\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Rules = (props) => {\r\n    return (\r\n        <Container fluid>\r\n        <Row  className='mt-3'>\r\n          <Col >\r\n            <div className=\"normal-text\">\r\n              <h2  className=\"text-center\" style={{fontFamily: \"ThemeFont\"}}>General Rules:</h2>\r\n              <br/>\r\n                <p>1 - When you buy a PacCat NFT, it's give you the opportunity to participate in the game</p>\r\n                <p>2 - At the end of the game, 90% of the amount collected on the PACCAT contract will be distributed to the winner</p>\r\n                <p>3 - In case two o more person win the game, the amount collected will be distributed equally among the winners</p>\r\n                <p>4 - The game finishes on 2022/May/31.</p>\r\n                <p>5 - The numbers will be provide by Powerball/LottoAmerica from US. You can see here: https://www.powerball.com/games/lotto-america </p>\r\n                <p>6 - The winner will be the one who owned the six numbers announced at the first game of \"All Star Bonus 5x after game\" of the June/2022</p>\r\n                <p>7 - You should select from 6 to 15 numbers out of a total of 60</p>                \r\n                <p>9 - You have to have a BNB (Binance coin) wallet. We recomend to use Metamask</p>\r\n                <p>8 - The cost per number increases ( min 0.005 eth ) with the amount of numbers selected</p>\r\n                <p>10 - You can play as many times as you like</p>\r\n                <p>11 - Each time you play, one token will be minted to your account, with the numbers that you've selected</p>\r\n                <p>Contact: paccat at protonmail.com</p>\r\n            </div>\r\n          </Col>                   \r\n        </Row>              \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Rules","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\nimport PlayGame from '../components/PlayGame';\r\nimport Rules from '../components/Rules';\r\n\r\nconst SignRoutes = () => {\r\n  return (\r\n      <Switch>\r\n        <Route path=\"/rules\" component={Rules} />      \r\n        <Route path=\"/\" component={PlayGame} />        \r\n      </Switch>\r\n  );\r\n};\r\n\r\nexport default SignRoutes;","import React from 'react'\r\nimport Loader from 'react-loader-spinner';\r\nimport './style.css';\r\n\r\n\r\nconst LoadingForm = (props) => {\r\n    \r\n\r\n    return (\r\n        props.visible ? \r\n            <div className=\"container\" style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"100vh\"}}>\r\n            <Loader visible={props.loading} type=\"Grid\" color=\"#00004d\" height={80} width={80}/>\r\n        </div> : <></>)\r\n}\r\n\r\n\r\nexport default LoadingForm","import { connect } from \"react-redux\"\r\nimport { bindActionCreators } from \"redux\"\r\nimport { Creators as LotteryActions } from \"../../store/ducks/lottery\"\r\nimport { useAuth } from '../../blockchain/auth'\r\nimport LoadingForm from \"../LoadingForm\"\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Welcome = (props) => {\r\n\r\n    const { Login } = useAuth();    \r\n    const { setLoading } = props;\r\n\r\n    async function handleLogin() {\r\n\r\n        setLoading(true);\r\n        await Login();\r\n    }\r\n\r\n    return (\r\n    <div className=\"Welcome\">        \r\n        <LoadingForm visible={props.lottery.loading}/>\r\n        <div className=\"container\" style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"100vh\"}}>\r\n        <a href=\"#\" onClick={handleLogin}>\r\n            <div className=\"card-front\">\r\n                <p className=\"card-front-text\">You were invited to play</p>\r\n            </div>\r\n            </a>\r\n        </div>        \r\n\r\n        \r\n        \r\n    </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    lottery: state.lottery,\r\n  });\r\n  \r\n  const mapDispatchToProps = dispatch =>\r\n    bindActionCreators(LotteryActions, dispatch);\r\n  \r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(Welcome);\r\n  ","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\nimport Rules from '../components/Rules';\r\nimport Welcome from '../components/Welcome';\r\n\r\nconst OtherRoutes = () => {\r\n  return (\r\n    <Switch>      \r\n      <Route path=\"/rules\" component={Rules} /> \r\n      <Route path=\"/\" component={Welcome} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default OtherRoutes;","import React from 'react';\r\nimport { useAuth } from '../blockchain/auth';\r\n\r\nimport SignRoutes from './SignRoutes';\r\nimport OtherRoutes from './OtherRoutes';\r\n\r\nconst Routes = () => {\r\n  const { isLoged } = useAuth();\r\n\r\n   return isLoged ? <SignRoutes /> : <OtherRoutes />;  \r\n  //return <OtherRoutes />; \r\n};\r\n\r\nexport default Routes;","import { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport Routes from './routes';\nimport { AuthProvider } from './blockchain/auth';\nimport LoadingForm from \"./components/LoadingForm\"\nimport { Switch } from \"react-router-dom\"\n\nimport './App.css';\n\nfunction App() {\n  \n  return (\n    <Provider store={store}>\n      <AuthProvider loadingForm={LoadingForm}>      \n        <Switch>\n          <Routes />\n        </Switch>\n      </AuthProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\"\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n\n  document.getElementById('root')\n);\n"],"sourceRoot":""}